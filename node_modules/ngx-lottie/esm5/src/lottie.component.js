/**
 * @fileoverview added by tsickle
 * Generated from: src/lottie.component.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { __extends } from "tslib";
import { Component, ChangeDetectionStrategy, Inject, ElementRef, ViewChild, Self, PLATFORM_ID } from '@angular/core';
import { BaseDirective } from './base.directive';
import { AnimationLoader } from './animation-loader';
import { LottieEventsFacade } from './events-facade';
var LottieComponent = /** @class */ (function (_super) {
    __extends(LottieComponent, _super);
    function LottieComponent(platformId, eventsFacade, animationLoader) {
        var _this = _super.call(this, platformId, animationLoader) || this;
        _this.eventsFacade = eventsFacade;
        _this.container = (/** @type {?} */ (null));
        return _this;
    }
    /**
     * @return {?}
     */
    LottieComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
        _super.prototype.setWidthAndHeight.call(this);
        _super.prototype.loadAnimation.call(this, this.container.nativeElement, this.eventsFacade, this);
    };
    LottieComponent.decorators = [
        { type: Component, args: [{
                    selector: 'ng-lottie',
                    template: "\n    <div\n      #container\n      [style.width]=\"width\"\n      [style.height]=\"height\"\n      [ngStyle]=\"styles\"\n      [ngClass]=\"containerClass\"\n    ></div>\n  ",
                    changeDetection: ChangeDetectionStrategy.OnPush,
                    providers: [LottieEventsFacade]
                }] }
    ];
    /** @nocollapse */
    LottieComponent.ctorParameters = function () { return [
        { type: String, decorators: [{ type: Inject, args: [PLATFORM_ID,] }] },
        { type: LottieEventsFacade, decorators: [{ type: Self }] },
        { type: AnimationLoader }
    ]; };
    LottieComponent.propDecorators = {
        container: [{ type: ViewChild, args: ['container', { static: true },] }]
    };
    return LottieComponent;
}(BaseDirective));
export { LottieComponent };
if (false) {
    /** @type {?} */
    LottieComponent.prototype.container;
    /**
     * @type {?}
     * @private
     */
    LottieComponent.prototype.eventsFacade;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibG90dGllLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL25neC1sb3R0aWUvIiwic291cmNlcyI6WyJzcmMvbG90dGllLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7QUFBQSxPQUFPLEVBQ0wsU0FBUyxFQUNULHVCQUF1QixFQUV2QixNQUFNLEVBQ04sVUFBVSxFQUNWLFNBQVMsRUFDVCxJQUFJLEVBQ0osV0FBVyxFQUNaLE1BQU0sZUFBZSxDQUFDO0FBRXZCLE9BQU8sRUFBRSxhQUFhLEVBQUUsTUFBTSxrQkFBa0IsQ0FBQztBQUNqRCxPQUFPLEVBQUUsZUFBZSxFQUFFLE1BQU0sb0JBQW9CLENBQUM7QUFDckQsT0FBTyxFQUFFLGtCQUFrQixFQUFFLE1BQU0saUJBQWlCLENBQUM7QUFFckQ7SUFjcUMsbUNBQWE7SUFHaEQseUJBQ3VCLFVBQWtCLEVBQ3ZCLFlBQWdDLEVBQ2hELGVBQWdDO1FBSGxDLFlBS0Usa0JBQU0sVUFBVSxFQUFFLGVBQWUsQ0FBQyxTQUNuQztRQUppQixrQkFBWSxHQUFaLFlBQVksQ0FBb0I7UUFKUixlQUFTLEdBQTRCLG1CQUFBLElBQUksRUFBQyxDQUFDOztJQVFyRixDQUFDOzs7O0lBRUQsa0NBQVE7OztJQUFSO1FBQ0UsaUJBQU0saUJBQWlCLFdBQUUsQ0FBQztRQUMxQixpQkFBTSxhQUFhLFlBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxhQUFhLEVBQUUsSUFBSSxDQUFDLFlBQVksRUFBRSxJQUFJLENBQUMsQ0FBQztJQUM3RSxDQUFDOztnQkE1QkYsU0FBUyxTQUFDO29CQUNULFFBQVEsRUFBRSxXQUFXO29CQUNyQixRQUFRLEVBQUUsK0tBUVQ7b0JBQ0QsZUFBZSxFQUFFLHVCQUF1QixDQUFDLE1BQU07b0JBQy9DLFNBQVMsRUFBRSxDQUFDLGtCQUFrQixDQUFDO2lCQUNoQzs7Ozs2Q0FLSSxNQUFNLFNBQUMsV0FBVztnQkFwQmQsa0JBQWtCLHVCQXFCdEIsSUFBSTtnQkF0QkEsZUFBZTs7OzRCQWtCckIsU0FBUyxTQUFDLFdBQVcsRUFBRSxFQUFFLE1BQU0sRUFBRSxJQUFJLEVBQUU7O0lBYzFDLHNCQUFDO0NBQUEsQUE3QkQsQ0FjcUMsYUFBYSxHQWVqRDtTQWZZLGVBQWU7OztJQUMxQixvQ0FBcUY7Ozs7O0lBSW5GLHVDQUFnRCIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7XG4gIENvbXBvbmVudCxcbiAgQ2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3ksXG4gIE9uSW5pdCxcbiAgSW5qZWN0LFxuICBFbGVtZW50UmVmLFxuICBWaWV3Q2hpbGQsXG4gIFNlbGYsXG4gIFBMQVRGT1JNX0lEXG59IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuXG5pbXBvcnQgeyBCYXNlRGlyZWN0aXZlIH0gZnJvbSAnLi9iYXNlLmRpcmVjdGl2ZSc7XG5pbXBvcnQgeyBBbmltYXRpb25Mb2FkZXIgfSBmcm9tICcuL2FuaW1hdGlvbi1sb2FkZXInO1xuaW1wb3J0IHsgTG90dGllRXZlbnRzRmFjYWRlIH0gZnJvbSAnLi9ldmVudHMtZmFjYWRlJztcblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAnbmctbG90dGllJyxcbiAgdGVtcGxhdGU6IGBcbiAgICA8ZGl2XG4gICAgICAjY29udGFpbmVyXG4gICAgICBbc3R5bGUud2lkdGhdPVwid2lkdGhcIlxuICAgICAgW3N0eWxlLmhlaWdodF09XCJoZWlnaHRcIlxuICAgICAgW25nU3R5bGVdPVwic3R5bGVzXCJcbiAgICAgIFtuZ0NsYXNzXT1cImNvbnRhaW5lckNsYXNzXCJcbiAgICA+PC9kaXY+XG4gIGAsXG4gIGNoYW5nZURldGVjdGlvbjogQ2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3kuT25QdXNoLFxuICBwcm92aWRlcnM6IFtMb3R0aWVFdmVudHNGYWNhZGVdXG59KVxuZXhwb3J0IGNsYXNzIExvdHRpZUNvbXBvbmVudCBleHRlbmRzIEJhc2VEaXJlY3RpdmUgaW1wbGVtZW50cyBPbkluaXQge1xuICBAVmlld0NoaWxkKCdjb250YWluZXInLCB7IHN0YXRpYzogdHJ1ZSB9KSBjb250YWluZXI6IEVsZW1lbnRSZWY8SFRNTEVsZW1lbnQ+ID0gbnVsbCE7XG5cbiAgY29uc3RydWN0b3IoXG4gICAgQEluamVjdChQTEFURk9STV9JRCkgcGxhdGZvcm1JZDogc3RyaW5nLFxuICAgIEBTZWxmKCkgcHJpdmF0ZSBldmVudHNGYWNhZGU6IExvdHRpZUV2ZW50c0ZhY2FkZSxcbiAgICBhbmltYXRpb25Mb2FkZXI6IEFuaW1hdGlvbkxvYWRlclxuICApIHtcbiAgICBzdXBlcihwbGF0Zm9ybUlkLCBhbmltYXRpb25Mb2FkZXIpO1xuICB9XG5cbiAgbmdPbkluaXQoKTogdm9pZCB7XG4gICAgc3VwZXIuc2V0V2lkdGhBbmRIZWlnaHQoKTtcbiAgICBzdXBlci5sb2FkQW5pbWF0aW9uKHRoaXMuY29udGFpbmVyLm5hdGl2ZUVsZW1lbnQsIHRoaXMuZXZlbnRzRmFjYWRlLCB0aGlzKTtcbiAgfVxufVxuIl19